{"version":3,"sources":["webpack:///./src/components/generic/thumbnailButton.js","webpack:///./src/components/index/map.js","webpack:///./src/pages/index.js"],"names":["Img","GatsbyImage","borderRadius","transition","animation","default","ThumbnailButton","width","cursor","padding","a","background","colors","map","stroke","color","opacity","Svg","ThumbnailButtonComponent","props","to","path","viewBox","strokeWidth","d","fill","strokeLinecap","strokeLinejoin","fixed","img","text","Cells","logoGreen","Text","ViewBox","height","screen","mediaQuery","s","Map","logoBlue","lightGrey","MapComponent","noPadding","preserveAspectRatio","transform","query","IndexPage","data","title","mapsJson","file","childImageSharp"],"mappings":"iQAOA,I,IAAMA,EAAM,YAAOC,IAAP,sBAAoB,CAC9BC,aAAc,EACdC,WAAYC,IAAUD,WAAWE,SAFvB,IAKNC,EAAkB,wCAAW,CACjCC,MAAO,IACPC,OAAQ,UACRC,QAAS,GACTP,aAAc,EACdC,WAAYC,IAAUD,WAAWE,QAEjCK,EAAG,CACDP,WAAYC,IAAUD,WAAWE,SAGnC,aACEM,WAAYC,IAAOC,IAAIC,OAEvBJ,EAAG,CACDK,MAAOH,IAAOD,aAJlB,EAOGX,GAAM,CACLgB,QAAS,KARb,IAXsB,IAwBlBC,EAAM,2FAmCGC,EA9BkB,SAACC,GAChC,OACE,YAACb,EAAD,KACE,YAAC,OAAD,CAAMc,GAAID,EAAMC,IACbD,EAAME,KACL,YAACJ,EAAD,CACAK,QAASH,EAAMG,QACfR,OAAQF,IAAOC,IAAIC,OACnBS,YAAa,IAEX,oBACEC,EAAGL,EAAME,KACTE,YAAa,IACbE,KAAK,OACLC,cAAc,OACdC,eAAe,WAGjB,YAAC3B,EAAD,CAAK4B,MAAOT,EAAMU,OAGxB,sBACE,YAAC,OAAD,CAAMT,GAAID,EAAMC,IACbD,EAAMW,SCzDXC,EAAQ,sCAAS,CACrBN,KAAMb,IAAOoB,UACb7B,WAAYC,IAAUD,WAAWE,SAFrB,IAKR4B,EAAO,yCAAY,CACvBR,KAAMb,IAAOD,YADF,IAIPuB,EAAU,6CACd3B,MAAO,OACP4B,OAAQ,MACPC,IAAOC,WAAWC,GAAI,CACrBH,OAAQ,KAJI,OAQVI,EAAM,wCAAW,CACrB5B,WAAYC,IAAO4B,SACnBrC,WAAYC,IAAUD,WAAWE,QAEjC,cACEM,WAAYC,IAAO6B,WADrB,EAGGV,GAAQ,CACPN,KAAMb,IAAOD,WACbG,OAAQF,IAAOkB,MALnB,EAOGG,GAAO,CACNR,KAAMb,IAAOkB,MARjB,IAJU,IAiDGY,EAhCM,WACnB,OACE,YAACH,EAAD,KACE,YAAC,IAAD,CAAgBI,WAAS,GACvB,YAACT,EAAD,CACEZ,QAAQ,cACRsB,oBAAoB,kBAEpB,YAACb,EAAD,CACEc,UAAU,qBAEV,oBACErB,EAAE,obAEJ,oBACEA,EAAE,sPAGN,YAACO,EAAD,KACE,oBACEP,EAAE,uQAEJ,oBACEA,EAAE,8OCGHsB,GAFEC,UAxDG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,YAEX,YAAC,EAAD,MACA,YAAC,IAAD,KACE,+CACA,oYAIG,YAAC,OAAD,CAAM7B,GAAG,QAAT,sBAJH,sIAOA,uSAIA,kUAKA,4QAIA,gQAOF,YAAC,IAAD,KACE,mCACA,uBACE,YAAC,EAAD,CACEE,QAAS0B,EAAKE,SAAS5B,QACvBD,KAAM2B,EAAKE,SAAS1B,EACpBJ,GAAG,OACHU,KAAK,qBAGT,oCACA,uBACE,YAAC,EAAD,CACED,IAAKmB,EAAKG,KAAKC,gBAAgBxB,MAC/BR,GAAG,SACHU,KAAK,yBASG","file":"component---src-pages-index-js-368719a2ffa85d8a84ce.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\nimport GatsbyImage from 'gatsby-image';\n\nimport { colors, animation } from '../constants';\n\nconst Img = styled(GatsbyImage)({\n  borderRadius: 8,\n  transition: animation.transition.default,\n});\n\nconst ThumbnailButton = styled.div({\n  width: 300,\n  cursor: 'pointer',\n  padding: 16,\n  borderRadius: 8,\n  transition: animation.transition.default,\n\n  a: {\n    transition: animation.transition.default,\n  },\n\n  ':hover': {\n    background: colors.map.stroke,\n\n    a: {\n      color: colors.background,\n    },\n\n    [Img]: {\n      opacity: 0.15,\n    },\n  },\n});\n\nconst Svg = styled.svg({\n  width: '100%',\n  height: 200,\n});\n\nconst ThumbnailButtonComponent = (props) => {\n  return (\n    <ThumbnailButton>\n      <Link to={props.to}>\n        {props.path ?\n          <Svg\n          viewBox={props.viewBox}\n          stroke={colors.map.stroke}\n          strokeWidth={0.7}\n          >\n            <path\n              d={props.path}\n              strokeWidth={1.2}\n              fill=\"none\"\n              strokeLinecap=\"butt\"\n              strokeLinejoin=\"miter\"\n              />\n          </Svg>\n          : <Img fixed={props.img} />\n        }\n      </Link>\n      <h3>\n        <Link to={props.to}>\n          {props.text}\n        </Link>\n      </h3>\n    </ThumbnailButton>\n  );\n};\n\nexport default ThumbnailButtonComponent;","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport CenteredColumn from '../layouts/centeredColumn';\n\nimport { colors, animation, screen } from '../constants';\n\nconst Cells = styled.g({\n  fill: colors.logoGreen,\n  transition: animation.transition.default,\n});\n\nconst Text = styled.text({\n  fill: colors.background,\n});\n\nconst ViewBox = styled.svg({\n  width: '100%',\n  height: 500,\n  [screen.mediaQuery.s]: {\n    height: 610,\n  },\n});\n\nconst Map = styled.div({\n  background: colors.logoBlue,\n  transition: animation.transition.default,\n\n  '&:hover': {\n    background: colors.lightGrey,\n\n    [Cells]: {\n      fill: colors.background,\n      stroke: colors.text,\n    },\n    [Text]: {\n      fill: colors.text,\n    },\n  }\n});\n\nconst MapComponent = () => {\n  return (\n    <Map>\n      <CenteredColumn noPadding>\n        <ViewBox\n          viewBox=\"0 0 280 190\"\n          preserveAspectRatio=\"xMidYMid slice\"\n        >\n          <Cells\n            transform=\"translate(36,-56)\"\n          >\n            <path\n              d=\"M 48.380953,77.107141 C 34.90915,80.88033 20.392191,90.081633 15.497024,103.1875 c -5.023507,13.44947 -0.85259,30.98176 7.9375,42.33333 10.904696,14.08239 30.572862,22.99148 48.380953,22.67857 22.930129,-0.40291 65.097463,-8.76644 61.232133,-31.37202 C 129.2546,114.64466 95.65749,135.07517 82.020832,117.17262 72.314247,104.42956 82.344248,92.823278 72.571428,80.13095 67.613745,73.692223 56.206069,74.915479 48.380953,77.107141 Z\"\n            />\n            <path\n              d=\"m 151.19047,179.16071 c -6.76474,1.29835 -13.69335,9.00245 -13.22916,15.875 0.67907,10.05409 12.2246,20.26772 22.30059,20.41071 9.82478,0.13943 23.35966,-9.50826 22.3006,-19.27678 -1.28214,-11.82612 -19.68984,-19.25109 -31.37203,-17.00893 z\"\n            />\n          </Cells>\n          <Cells>\n            <path\n              d=\"m 82.323216,53.974997 c -5.787607,0.48565 -11.89081,7.447464 -11.339287,13.229166 0.672662,7.051613 9.591749,14.0212 16.630954,13.229167 5.611789,-0.631424 11.150813,-7.610552 10.583333,-13.229167 -0.692187,-6.853339 -9.010917,-13.805145 -15.875,-13.229166 z\"\n            />\n            <path\n              d=\"m 189.02699,137.18894 c -2.39554,-0.0881 -4.85285,2.94859 -4.81085,5.34538 0.0629,3.59078 3.96311,7.04077 7.48355,7.75082 1.99528,0.40244 5.10258,-0.43491 5.61266,-2.40543 1.12982,-4.36465 -3.77989,-10.52511 -8.28536,-10.69077 z\"\n            />\n          </Cells>\n        </ViewBox>\n      </CenteredColumn>\n    </Map>\n  );\n};\n\nexport default MapComponent;\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layouts/layout\"\nimport CenteredColumn from \"../components/layouts/centeredColumn\"\nimport SEO from \"../components/layouts/seo\"\nimport ThumbnailButton from \"../components/generic/thumbnailButton\"\nimport EarthMap from \"../components/index/map\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Acceuil\" />\n    \n    <EarthMap />\n    <CenteredColumn>\n      <h1>La nourriture vivante</h1>\n      <p>\n        Bien que je cuisine et mange du bœuf, j’ai réalisé il y a quelques années que je ne savais que très peu de choses à propos des\n        différentes pièces proposées à la vente. J’avais donc pour projet dans un coin de ma tête de remédier à cela. À la faveur d’un\n        pic de motivation, je me suis lancé dans des recherches puis dans la création de la première page de ce site\n        (<Link to=\"beef\">la découpe du bœuf</Link>). J’ai passé de longues heures à rassembler et recouper les informations, puis à dessiner\n        et à décrire chaque pièce de boucherie.\n      </p>\n      <p>\n        Au cours de ce travail, ma vision sur l’importance du sujet a évolué. Je considérais initialement ces informations comme intéressantes\n        mais accessoires. Il me paraissait donc logique que seuls les professionnels et quelques cuisiniers passionnés connaissent\tces détails.\n      </p>\n      <p>\n        Je pense désormais au contraire que chaque consommateur, même le plus occasionnel\t, devrait avoir ces connaissances sur la nature même\n        de ce qu’il consomme. Autrement dit, comment est-il possible que j’en sache si peu après des années à acheter de la viande et à en\n        commander dans les restaurants.\n      </p>\n      <p>\n        J’ai d’abord eu cette réflexion à propos de la viande de bœuf, mais il est évident qu’elle s’applique à tous les aliments. Qu’est-ce\n        que le poivre ? Que sont le thé, le fromage ou les œufs ? Sûrement pas uniquement des articles de supermarché.\n      </p>\n      <p>\n        J’ai donc décidé de ne pas m’arrêter au schéma des pièces de bœuf, mais de créer ce site et d’y ajouter des pages au fur et à mesure.\n        Le but n’est pas d’être exhaustif, mais de créer des schémas clairs, interactifs et instructifs.\n      </p>\n\n    </CenteredColumn>\n\n    <CenteredColumn>\n      <h1>La viande</h1>\n      <div>\n        <ThumbnailButton\n          viewBox={data.mapsJson.viewBox}\n          path={data.mapsJson.d}\n          to=\"beef\"\n          text='Découpe du bœuf'\n        />\n      </div>\n      <h1>Les fruits</h1>\n      <div>\n        <ThumbnailButton\n          img={data.file.childImageSharp.fixed}\n          to=\"fruits\"\n          text='Fruits de saison'\n        />\n      </div>\n    </CenteredColumn>\n  </Layout>\n)\n\nexport default IndexPage;\n\nexport const query = graphql`\nquery {\n  mapsJson(country: {eq: \"fr\"}, map: {eq: \"beef\"}) {\n    d\n    viewBox\n  }\n\n  file(relativePath: {eq: \"images/fruits/fraise-thumbnail.jpg\"}) {\n    childImageSharp {\n      fixed(height: 200, width: 300) {\n        ...GatsbyImageSharpFixed\n      }\n    }\n  }\n}\n` \n"],"sourceRoot":""}