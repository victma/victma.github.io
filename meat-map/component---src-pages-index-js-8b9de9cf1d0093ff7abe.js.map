{"version":3,"sources":["webpack:///./src/components/layouts/centeredColumnLayout.js","webpack:///./src/components/generic/buttonLink.js","webpack:///./src/components/generic/thumbnailButton.js","webpack:///./src/pages/index.js"],"names":["Column","maxWidth","screen","l","margin","CenteredColumnLayout","children","colors","button","background","fonts","ThumbnailButton","width","cursor","padding","borderRadius","transition","animation","default","a","map","stroke","color","Svg","ThumbnailButtonComponent","props","to","viewBox","strokeWidth","d","path","fill","strokeLinecap","strokeLinejoin","text","query","IndexPage","data","title","mapsJson"],"mappings":"sMAMMA,EAAS,wCAAW,CACxBC,SAAUC,IAAOC,EACjBC,OAAQ,SAaKC,EAVc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,OACE,YAAC,IAAD,KACE,YAACN,EAAD,KACGM,K,oCCTUC,IAAOC,OACjBD,IAAOE,WACJC,IAAMF,OAHlB,ICCMG,EAAkB,wCAAW,CACjCC,MAAO,IACPC,OAAQ,UACRC,QAAS,GACTC,aAAc,EACdC,WAAYC,IAAUD,WAAWE,QAEjCC,EAAG,CACDH,WAAYC,IAAUD,WAAWE,SAGnC,SAAU,CACRT,WAAYF,IAAOa,IAAIC,OAEvBF,EAAG,CACDG,MAAOf,IAAOE,eAKdc,EAAM,8EA+BGC,EA3BkB,SAACC,GAChC,OACE,YAACd,EAAD,KACE,YAAC,OAAD,CAAMe,GAAID,EAAMC,IACd,YAACH,EAAD,CACEI,QAASF,EAAME,QACfN,OAAQd,IAAOa,IAAIC,OACnBO,YAAa,IAEb,oBACEC,EAAGJ,EAAMK,KACTF,YAAa,IACbG,KAAK,OACLC,cAAc,OACdC,eAAe,YAIrB,sBACE,YAAC,OAAD,CAAMP,GAAID,EAAMC,IACbD,EAAMS,SCxBJC,GAFEC,UAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,YAAC,EAAD,KACE,YAAC,IAAD,CAAKC,MAAM,YAEX,mCACA,uBACE,YAAC,EAAD,CACEX,QAASU,EAAKE,SAASZ,QACvBG,KAAMO,EAAKE,SAASV,EACpBH,GAAG,OACHQ,KAAK,wBAQK","file":"component---src-pages-index-js-8b9de9cf1d0093ff7abe.js","sourcesContent":["import React from 'react';\nimport Layout from './layout';\nimport styled from '@emotion/styled';\n\nimport { screen } from '../constants';\n\nconst Column = styled.div({\n  maxWidth: screen.l,\n  margin: 'auto',\n});\n\nconst CenteredColumnLayout = ({ children }) => {\n  return (\n    <Layout>\n      <Column>\n        {children}\n      </Column>\n    </Layout>\n  );\n};\n\nexport default CenteredColumnLayout;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { colors, fonts } from '../constants';\n\nconst style = {\n  backgroundColor: colors.button,\n  color: colors.background,\n  fontSize: fonts.button,\n  borderRadius: 8,\n  padding: '16px 32px',\n  display: 'inline-block',\n}\n\nconst ButtonLink = (props) => (\n  <Link css={style} {...props}>\n    {props.children}\n  </Link>\n);\n\nexport default ButtonLink;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport { colors, animation } from '../constants';\n\nconst ThumbnailButton = styled.div({\n  width: 300,\n  cursor: 'pointer',\n  padding: 16,\n  borderRadius: 8,\n  transition: animation.transition.default,\n\n  a: {\n    transition: animation.transition.default,\n  },\n\n  ':hover': {\n    background: colors.map.stroke,\n\n    a: {\n      color: colors.background,\n    }\n  },\n});\n\nconst Svg = styled.svg({\n  width: '100%',\n});\n\nconst ThumbnailButtonComponent = (props) => {\n  return (\n    <ThumbnailButton>\n      <Link to={props.to}>\n        <Svg\n          viewBox={props.viewBox}\n          stroke={colors.map.stroke}\n          strokeWidth={0.7}\n        >\n          <path\n            d={props.path}\n            strokeWidth={1.2}\n            fill=\"none\"\n            strokeLinecap=\"butt\"\n            strokeLinejoin=\"miter\"\n          />\n        </Svg>\n      </Link>\n      <h3>\n        <Link to={props.to}>\n          {props.text}\n        </Link>\n      </h3>\n    </ThumbnailButton>\n  );\n};\n\nexport default ThumbnailButtonComponent;","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport CenteredColumnLayout from \"../components/layouts/centeredColumnLayout\"\nimport SEO from \"../components/layouts/seo\"\nimport ButtonLink from \"../components/generic/buttonLink\"\nimport ThumbnailButton from \"../components/generic/thumbnailButton\"\n\nconst IndexPage = ({ data }) => (\n  <CenteredColumnLayout>\n    <SEO title=\"Acceuil\" />\n    \n    <h1>La viande</h1>\n    <div>\n      <ThumbnailButton\n        viewBox={data.mapsJson.viewBox}\n        path={data.mapsJson.d}\n        to=\"beef\"\n        text='DÃ©coupe du boeuf'\n      />\n    </div>\n  </CenteredColumnLayout>\n)\n\nexport default IndexPage;\n\nexport const query = graphql`\nquery {\n  mapsJson(country: {eq: \"fr\"}, map: {eq: \"beef\"}) {\n    d\n    viewBox\n  }\n}\n` \n"],"sourceRoot":""}