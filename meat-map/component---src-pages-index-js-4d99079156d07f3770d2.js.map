{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/maps/piece.js","webpack:///./src/components/maps/unediblePiece.js","webpack:///./src/components/maps/map.js","webpack:///./src/components/generic/tooltip.js","webpack:///./src/components/maps/nutritionValue.js","webpack:///./src/components/maps/recipes.js","webpack:///./src/components/generic/badge.js","webpack:///./src/components/maps/attributes.js","webpack:///./src/components/generic/hoverAdaptedSpan.js","webpack:///./src/components/maps/partName.js","webpack:///./src/components/maps/mapContainer.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js"],"names":["toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Path","Piece","props","d","transform","strokeLinecap","strokeLinejoin","strokeOpacity","fillOpacity","selected","onMouseEnter","onHover","onMouseLeave","onClick","fill","colors","map","unedibleFill","Svg","screen","mediaQuery","l","maxWidth","Map","updateHovered","id","isHovered","hovered","render","viewBox","stroke","strokeWidth","height","parts","p","description","key","h","clicked","Component","Container","TooltipDiv","whiteSpace","opacity","textAlign","padding","borderRadius","position","zIndex","top","left","transition","content","bottom","marginLeft","borderWidth","borderStyle","margin","backgroundColor","background","color","borderColor","Tooltip","state","visible","children","title","text","t","defaultProps","Nutrition","fontSize","fonts","partName","nutrition","borderBottom","NutritionValue","tooltip","role","aria-label","emojiAria","emoji","unit","details","Recipes","names","join","Badge","Attributes","attributes","lean","badge","marble","gelatin","NonHoverableDeviceSpan","HoverableDeviceSpan","HoverAdaptedSpan","nonHoverable","hoverable","FixedContainer","HelpMessage","boxSizing","width","MovingContainer","show","Title","display","Description","PartName","label","recipes","getDerivedStateFromProps","name","console","log","lipids","MapSubContainer","overflowX","overflowY","direction","PartNameSubContainer","MapContainer","updateHoveredPiece","setState","updateClickedPiece","getFocusedPieceId","getPieceProps","find","part","query","IndexPage","data","mapsJson","$export","P"],"mappings":"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","file":"component---src-pages-index-js-4d99079156d07f3770d2.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Path = styled.path({\n  cursor: \"pointer\",\n  transition: \"all 0.2s ease-out\",\n})\n\nconst Piece = (props) => {\n  return ( \n    <Path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fillOpacity={props.selected ? 1 : 0}\n        onMouseEnter={() => {props.onHover(true)}}\n        onMouseLeave={() => {props.onHover(false)}}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React from 'react';\n\nimport { colors } from \"../constants\";\n\nconst Piece = (props) => {\n  return ( \n    <path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fill={colors.map.unedibleFill}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport { colors, screen } from \"../constants\";\n\nimport Piece from \"./piece\"\nimport UnediblePiece from \"./unediblePiece\"\n\nconst Svg = styled.svg({\n  [screen.mediaQuery.l]: {\n    maxWidth: \"100%\",\n  }\n})\n\nclass Map extends Component {\n  updateHovered = (id, isHovered) => {\n    this.props.hovered(isHovered ? id : null);\n  }\n\n  render() { \n    return (\n      <Svg\n        viewBox=\"0 0 159.69495 99.785713\"\n        fill={colors.map.fill}\n        stroke={colors.map.stroke}\n        strokeWidth={0.7}\n        height=\"100%\"\n        >\n          {\n            this.props.parts.map(p => ( p.description ?\n            <Piece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              selected={this.props.selected === p.id}\n              onHover={h => (this.updateHovered(p.id, h))}\n              onClick={() => (this.props.clicked(p.id))}\n            /> :\n            <UnediblePiece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              onClick={() => (this.props.clicked(null))}\n            />\n            ))\n          }\n      </Svg>\n    );\n  }\n}\n \nexport default Map;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div({\n  position: \"relative\",\n  display: \"inline-block\",\n  cursor: \"pointer\",\n})\n\nconst TooltipDiv = styled.div({\n  whiteSpace: \"nowrap\",\n  opacity: 0,\n  textAlign: \"center\",\n  padding: \"0 8px\",\n  borderRadius: 4,\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  left: \"50%\",\n  transform: \"translateX(-50%)\",\n  transition: \"opacity .4s\",\n  \n  [`${Container}:hover &`]: {\n    opacity: 1,\n  },\n\n  '&::after': {\n    content: '\" \"',\n    position: \"absolute\",\n    bottom: \"100%\",\n    left: \"50%\",\n    marginLeft: -8,\n    borderWidth: 8,\n    borderStyle: \"solid\",\n  },\n\n  '&>div, &>hr': {\n    margin: \"8px 0\",\n  }\n}, props => ({\n  backgroundColor: props.background,\n  color: props.color,\n  '&::after': {\n    borderColor: `transparent transparent ${props.background} transparent`,\n  }\n}))\n\nclass Tooltip extends Component {\n  state = {\n    visible: false,\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.props.children}\n        <TooltipDiv\n          background={this.props.background}\n          color={this.props.color}\n        >\n          { this.props.title && \n            <>\n              <div>{this.props.title}</div>\n              <hr />\n            </>\n          }\n          {\n            typeof this.props.text === \"string\"\n            ? <div>{this.props.text}</div>\n            : this.props.text.map(t => (\n              <div>{t}</div>\n            ))\n          }\n        </TooltipDiv>\n      </Container>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  background: PropTypes.string,\n  color: PropTypes.string,\n};\n\nTooltip.defaultProps = {\n  background: \"black\",\n  color: \"white\",\n};\n\nexport default Tooltip;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport Tooltip from \"../generic/tooltip\";\n\nimport { colors, fonts } from \"../constants\";\n\nconst Nutrition = styled.p({\n  fontSize: fonts.partName.nutrition,\n  \n  '& > :not([role=img])': {\n    borderBottom: \"2px dotted #444\",\n  }\n})\n\nconst NutritionValue = (props) => {\n  return (\n    <Tooltip\n      title={props.title}\n      text={props.tooltip}\n      background={colors.partName.text}\n      color={colors.background}\n    >\n      <Nutrition>\n        <span role=\"img\" aria-label={props.emojiAria}>{props.emoji}</span>\n        {\" \"}\n        <span>{props.value ?? \"-\"} {props.unit}</span>\n      </Nutrition>\n    </Tooltip>\n  );\n};\n\nNutritionValue.propTypes = {\n  title: PropTypes.string,\n  tooltip: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  emoji: PropTypes.string.isRequired,\n  emojiAria: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  unit: PropTypes.string,\n};\n\nNutritionValue.defaultProps = {\n  unit: \"%\",\n}\n\nexport default NutritionValue;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport { fonts } from \"../constants\";\n\nconst Container = styled.p({\n  fontSize: fonts.partName.details,\n  padding: 8,\n})\n\nconst Recipes = props => {\n  return (\n    <Container>\n      <b>Cuisson : </b>\n      {props.names.join(\", \")}\n    </Container>\n  );\n};\n\nRecipes.propTypes = {\n  names: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Recipes;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div({\n  padding: \"8px 16px\",\n  borderRadius: 4,\n  margin: \"0 8px\",\n}, props => ({\n  color: props.color,\n  backgroundColor: props.background,\n}));\n\n const Badge = (props) => {\n  return (\n    <Container color={props.color} background={props.background}>\n      {props.text}\n    </Container>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport Badge from '../generic/badge';\n\nimport { colors } from '../constants';\n\nconst Container = styled.div({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: 8,\n});\n\nconst Attributes = props => {\n  return (\n    <Container>\n      {props.attributes.lean &&\n        <Badge\n          text={\"Maigre\"}\n          color={colors.background}\n          background={colors.partName.badge.lean}\n        />\n      }\n      {props.attributes.marble &&\n        <Badge\n          text={\"Persillé\"}\n          color={colors.background}\n          background={colors.partName.badge.marble}\n        />\n      }\n      {props.attributes.gelatin &&\n        <Badge\n          text={\"Gelatineux\"}\n          color={colors.background}\n          background={colors.partName.badge.gelatin}\n        />\n      }\n    </Container>\n  );\n};\n\nAttributes.propTypes = {\n  attributes: PropTypes.shape({\n    lean: PropTypes.bool,\n    marble: PropTypes.bool,\n    gelatin: PropTypes.bool,\n  }),\n};\n\nexport default Attributes;","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst NonHoverableDeviceSpan = styled.span({\n  \"@media (hover: hover)\": {\n    display: \"none\",\n  }\n})\n\nconst HoverableDeviceSpan = styled.span({\n  \"@media (hover: none)\": {\n    display: \"none\",\n  }\n})\n\nfunction HoverAdaptedSpan(props) {\n  return (\n    <>\n      <NonHoverableDeviceSpan>{props.nonHoverable}</NonHoverableDeviceSpan>\n      <HoverableDeviceSpan>{props.hoverable}</HoverableDeviceSpan>\n    </>\n  );\n}\n\nexport default HoverAdaptedSpan;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport NutritionValue from \"./nutritionValue\";\nimport Recipes from \"./recipes\";\nimport Attributes from \"./attributes\";\nimport HoverAdpatedSpan from \"../generic/hoverAdaptedSpan\";\n\nimport { colors, screen } from \"../constants\";\n\nconst FixedContainer = styled.div({\n  textAlign: \"center\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  overflow: \"hidden\",\n  position: \"relative\",\n})\n\nconst HelpMessage = styled.p({\n  boxSizing: \"border-box\",\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  width: \"100%\",\n  fontSize: 24,\n  padding: 16,\n  margin: 0,\n  background: colors.partName.background,\n  color: colors.partName.text,\n  [screen.mediaQuery.l]: {\n    left: \"50%\",\n    width: 500,\n    marginLeft: -250,\n    bottom: 32,\n    borderRadius: 500,\n  }\n})\n\nconst MovingContainer = styled.div({\n  transition: \"0.5s\",\n  margin: \"0 auto\",\n  maxWidth: screen.l,\n}, props => ({\n  transform: props.show ? \"translateY(0%)\" : \"translateY(100%)\"\n}))\n\nconst Title = styled.h2({\n  display: \"inline-block\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  width: \"100%\",\n  padding: \"32px 32px 16px\",\n  background: colors.partName.background,\n  borderRadius: \"8px 8px 0 0\",\n  [screen.mediaQuery.l]: {\n    fontSize: 36,\n    width: \"unset\",\n    margin: \"0 32px\",\n    padding: \"32px 64px 16px\",\n  }\n})\n\nconst Description = styled.div({\n  padding: \"16px 32px 100%\",\n  margin: 0,\n  textAlign: \"center\",\n  background: colors.partName.background,\n  [screen.mediaQuery.l]: {\n    borderRadius: \"8px 8px 0 0\",\n  }\n})\n\nclass PartName extends Component {\n  state = { \n    label: \"\",\n    description: \"\",\n    nutrition: {},\n    recipes: [],\n    attributes: {},\n   };\n\n  // Needed to keep the previous name on animation\n  static getDerivedStateFromProps(props, state) {\n    if (!props.name || props.name === state.label) {\n      return null;\n    }\n\n    return {\n      label: props.name,\n      description: props.description,\n      nutrition: props.nutrition,\n      recipes: props.recipes,\n      attributes: props.attributes,\n    };\n  }\n\n  render() { \n    console.log(this.state);\n    return (\n      <FixedContainer>\n        <HelpMessage>\n          <HoverAdpatedSpan\n            hoverable={\"Survolez la carte pour afficher les détails\"}\n            nonHoverable={\"Cliquez la carte pour afficher les détails\"}\n          />\n        </HelpMessage>\n        <MovingContainer show={this.props.name}>\n          <Title>{ this.state.label }</Title>\n          <Description>\n            { this.state.nutrition.lipids && \n              <NutritionValue\n                title={\"Lipides\"}\n                value={this.state.nutrition.lipids.value}\n                emoji={\"🍟\"}\n                emojiAria={\"Frites\"}\n                tooltip={this.state.nutrition.lipids.text.length > 0\n                  ? this.state.nutrition.lipids.text\n                  : \"Pas de données\"\n                }\n              />\n            }\n            { this.state.recipes.length > 0 &&\n              <Recipes names={this.state.recipes} />\n            }\n            <Attributes attributes={this.state.attributes} />\n            <p>{this.state.description}</p>\n          </Description>\n        </MovingContainer>\n      </FixedContainer>\n    );\n  }\n}\n\nPartName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  nutrition: PropTypes.shape({\n    lipids: PropTypes.exact({\n      value: PropTypes.number,\n      text: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n    })\n  }).isRequired,\n  recipes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n \nexport default PartName;\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport Map from './map'\nimport PartName from \"./partName\"\n\nimport { screen } from \"../constants\"\n\nconst Container = styled.div({\n  height: \"100%\",\n})\n\nconst MapSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  textAlign: \"center\",\n  padding: \"32px 32px 0px\",\n  overflowX: \"scroll\",\n  overflowY: \"hidden\",\n  direction: \"rtl\",\n  [screen.mediaQuery.l]: {\n    height: \"66.6%\",\n  }\n})\n\nconst PartNameSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  [screen.mediaQuery.l]: {\n    height: \"33.3%\",\n  }\n})\n\nclass MapContainer extends Component {\n  state = { \n    hovered: null,\n    selected: null,\n   }\n\n  updateHoveredPiece = id => {\n    this.setState({\n      hovered: id,\n    });\n  }\n\n  updateClickedPiece = id => {\n    this.setState({\n      selected: (this.state.selected === id ? null : id),\n    })\n  }\n\n  getFocusedPieceId() {\n    return this.state.selected || this.state.hovered;\n  }\n  \n  getPieceProps(id) {\n    if (id === null) {\n      return {};\n    }\n    let part = this.props.parts.find(part => (part.id === id))\n    return part;\n  }\n\n  render() {\n    return (\n      <Container>\n        <MapSubContainer>\n          <Map\n            parts={this.props.parts}\n            selected={this.getFocusedPieceId()}\n            hovered={id => this.updateHoveredPiece(id)}\n            clicked={id => this.updateClickedPiece(id)}\n          />\n        </MapSubContainer>\n        <PartNameSubContainer>\n          <PartName\n            {...this.getPieceProps(this.getFocusedPieceId())}\n          />\n        </PartNameSubContainer>\n      </Container> \n    );\n  }\n}\n \nexport default MapContainer;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/layouts/seo\"\n\nimport MapContainer from \"../components/maps/mapContainer\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Boeuf\" />\n    <MapContainer\n      parts={data.mapsJson.parts}\n    />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\nquery MyQuery {\n  mapsJson(country: {eq: \"fr\"}, map: {eq: \"beef\"}) {\n    parts {\n      d\n      description\n      id\n      name\n      transform\n      nutrition {\n        lipids {\n          text\n          value\n        }\n      }\n      recipes\n      attributes {\n        gelatin\n        marble\n        lean\n      }\n    }\n  }\n}\n`   ","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}