{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/maps/piece.js","webpack:///./src/components/maps/unediblePiece.js","webpack:///./src/components/maps/map.js","webpack:///./src/components/generic/hoverAdaptedSpan.js","webpack:///./src/components/maps/recipes.js","webpack:///./src/components/generic/badge.js","webpack:///./src/components/maps/attributes.js","webpack:///./src/components/maps/partDescription.js","webpack:///./src/components/maps/partName.js","webpack:///./src/components/maps/mapContainer.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js"],"names":["toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Path","Piece","props","d","transform","strokeLinecap","strokeLinejoin","strokeOpacity","fillOpacity","selected","onMouseEnter","onHover","onMouseLeave","onClick","fill","colors","map","unedibleFill","Svg","screen","mediaQuery","l","maxWidth","Map","updateHovered","id","isHovered","hovered","handleClickOnMap","event","target","svgRef","current","clicked","React","createRef","render","viewBox","stroke","strokeWidth","height","ref","parts","p","description","key","h","outline","Component","NonHoverableDeviceSpan","HoverableDeviceSpan","HoverAdaptedSpan","nonHoverable","hoverable","Container","fontSize","fonts","partName","details","Recipes","text","color","backgroundColor","background","Badge","Attributes","attributes","lean","badge","marble","gelatin","Description","flexGrow","width","padding","margin","textAlign","borderRadius","PartDescription","cooking","split","paragraph","FixedContainer","HelpMessage","boxSizing","position","left","bottom","marginLeft","MovingContainer","transition","display","alignItems","flexDirection","show","Title","PartName","state","label","nutrition","getDerivedStateFromProps","name","MapSubContainer","overflowX","overflowY","direction","PartNameSubContainer","MapContainer","updateHoveredPiece","setState","updateClickedPiece","getFocusedPieceId","getPieceProps","find","part","query","IndexPage","data","title","mapsJson","$export","P"],"mappings":"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","file":"component---src-pages-index-js-477930e822eef94079a5.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Path = styled.path({\n  cursor: \"pointer\",\n  transition: \"all 0.2s ease-out\",\n})\n\nconst Piece = (props) => {\n  return ( \n    <Path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fillOpacity={props.selected ? 1 : 0}\n        onMouseEnter={() => {props.onHover(true)}}\n        onMouseLeave={() => {props.onHover(false)}}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React from 'react';\n\nimport { colors } from \"../constants\";\n\nconst Piece = (props) => {\n  return ( \n    <path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fill={colors.map.unedibleFill}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport { colors, screen } from \"../constants\";\n\nimport Piece from \"./piece\"\nimport UnediblePiece from \"./unediblePiece\"\n\nconst Svg = styled.svg({\n  [screen.mediaQuery.l]: {\n    maxWidth: \"100%\",\n  }\n})\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.svgRef = React.createRef();\n  }\n\n  updateHovered = (id, isHovered) => {\n    this.props.hovered(isHovered ? id : null);\n  }\n\n  handleClickOnMap = (event) => {\n    if(event.target === this.svgRef.current) {\n      this.props.clicked(null);\n    }\n  }\n\n  render() { \n    return (\n      <Svg\n        viewBox=\"0 0 159.69495 99.785713\"\n        fill={colors.map.fill}\n        stroke={colors.map.stroke}\n        strokeWidth={0.7}\n        height=\"100%\"\n        ref={this.svgRef}\n        onClick={this.handleClickOnMap}\n        >\n          {\n            this.props.parts.map(p => ( p.description ?\n            <Piece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              selected={this.props.selected === p.id}\n              onHover={h => (this.updateHovered(p.id, h))}\n              onClick={() => (this.props.clicked(p.id))}\n            /> :\n            <UnediblePiece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              onClick={() => (this.props.clicked(null))}\n            />\n            ))\n          }\n          <path\n            d={this.props.outline}\n            strokeWidth={1}\n            fill=\"none\"\n            strokeLinecap=\"butt\"\n            strokeLinejoin=\"miter\"\n          />\n      </Svg>\n    );\n  }\n}\n \nexport default Map;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst NonHoverableDeviceSpan = styled.span({\n  \"@media (hover: hover)\": {\n    display: \"none\",\n  }\n})\n\nconst HoverableDeviceSpan = styled.span({\n  \"@media (hover: none)\": {\n    display: \"none\",\n  }\n})\n\nfunction HoverAdaptedSpan(props) {\n  return (\n    <>\n      <NonHoverableDeviceSpan>{props.nonHoverable}</NonHoverableDeviceSpan>\n      <HoverableDeviceSpan>{props.hoverable}</HoverableDeviceSpan>\n    </>\n  );\n}\n\nexport default HoverAdaptedSpan;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport { fonts } from \"../constants\";\n\nconst Container = styled.p({\n  fontSize: fonts.partName.details,\n})\n\nconst Recipes = props => {\n  return (\n    <Container>\n      <b>Cuisson : </b>\n      {props.text}\n    </Container>\n  );\n};\n\nRecipes.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Recipes;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div({\n  padding: \"8px 16px\",\n  borderRadius: 4,\n  margin: \"0 8px\",\n}, props => ({\n  color: props.color,\n  backgroundColor: props.background,\n}));\n\n const Badge = (props) => {\n  return (\n    <Container color={props.color} background={props.background}>\n      {props.text}\n    </Container>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport Badge from '../generic/badge';\n\nimport { colors } from '../constants';\n\nconst Container = styled.div({\n  display: \"flex\",\n  justifyContent: \"center\",\n  margin: 16,\n});\n\nconst Attributes = props => {\n  return (\n    <Container>\n      {props.attributes.lean &&\n        <Badge\n          text={\"Maigre\"}\n          color={colors.background}\n          background={colors.partName.badge.lean}\n        />\n      }\n      {props.attributes.marble &&\n        <Badge\n          text={\"Persillé / Entrelardé\"}\n          color={colors.background}\n          background={colors.partName.badge.marble}\n        />\n      }\n      {props.attributes.gelatin &&\n        <Badge\n          text={\"Gelatineux\"}\n          color={colors.background}\n          background={colors.partName.badge.gelatin}\n        />\n      }\n    </Container>\n  );\n};\n\nAttributes.propTypes = {\n  attributes: PropTypes.shape({\n    lean: PropTypes.bool,\n    marble: PropTypes.bool,\n    gelatin: PropTypes.bool,\n  }),\n};\n\nexport default Attributes;","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nimport Recipes from \"./recipes\";\nimport Attributes from \"./attributes\";\n\nimport { colors, screen } from \"../constants\";\n\nconst Description = styled.div({\n  flexGrow: 1,\n  width: \"100%\",\n  padding: \"8px 16px\",\n  margin: 0,\n  textAlign: \"center\",\n  background: colors.partName.background,\n  [screen.mediaQuery.l]: {\n    borderRadius: \"8px 8px 0 0\",\n    padding: \"16px 32px\",\n  }\n})\n\nconst PartDescription = (props) => {\n  return (\n    <Description>\n      {props.cooking.text &&\n        <Recipes text={props.cooking.text} />\n      }\n      <Attributes attributes={props.attributes} />\n      {props.description.split('\\n').map(paragraph => (\n        <p>{paragraph}</p>\n      ))}\n    </Description>\n  );\n};\n\nexport default PartDescription;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"@emotion/styled\";\n\nimport HoverAdpatedSpan from \"../generic/hoverAdaptedSpan\";\nimport PartDescription from \"./partDescription\";\n\nimport { colors, screen } from \"../constants\";\n\nconst FixedContainer = styled.div({\n  textAlign: \"center\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  overflow: \"hidden\",\n  position: \"relative\",\n})\n\nconst HelpMessage = styled.p({\n  boxSizing: \"border-box\",\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  width: \"100%\",\n  fontSize: 24,\n  padding: 16,\n  margin: 0,\n  background: colors.partName.background,\n  color: colors.partName.text,\n  [screen.mediaQuery.l]: {\n    left: \"50%\",\n    width: 500,\n    marginLeft: -250,\n    bottom: 32,\n    borderRadius: 500,\n  }\n})\n\nconst MovingContainer = styled.div({\n  transition: \"0.5s\",\n  height: \"100%\",\n  margin: \"0 auto\",\n  maxWidth: screen.l,\n  display: \"flex\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n}, props => ({\n  transform: props.show ? \"translateY(0%)\" : \"translateY(100%)\"\n}))\n\nconst Title = styled.h2({\n  display: \"inline-block\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  width: \"100%\",\n  padding: \"16px 32px 8px\",\n  background: colors.partName.background,\n  borderRadius: \"8px 8px 0 0\",\n  [screen.mediaQuery.l]: {\n    fontSize: 36,\n    width: \"unset\",\n    margin: \"0 32px\",\n    padding: \"32px 64px 16px\",\n  }\n})\n\nclass PartName extends Component {\n  state = { \n    label: \"\",\n    description: \"\",\n    nutrition: {},\n    cooking: {},\n    attributes: {},\n   };\n\n  // Needed to keep the previous name on animation\n  static getDerivedStateFromProps(props, state) {\n    if (!props.name || props.name === state.label) {\n      return null;\n    }\n\n    return {\n      label: props.name,\n      description: props.description,\n      nutrition: props.nutrition,\n      cooking: props.cooking,\n      attributes: props.attributes,\n    };\n  }\n\n  render() { \n    return (\n      <FixedContainer>\n        <HelpMessage>\n          <HoverAdpatedSpan\n            hoverable={\"Survolez la carte pour afficher les détails\"}\n            nonHoverable={\"Cliquez la carte pour afficher les détails\"}\n          />\n        </HelpMessage>\n        <MovingContainer show={this.props.name}>\n          <Title>{ this.state.label }</Title>\n          <PartDescription\n            description={this.state.description}\n            nutrition={this.state.nutrition}\n            cooking={this.state.cooking}\n            attributes={this.state.attributes}\n          />\n        </MovingContainer>\n      </FixedContainer>\n    );\n  }\n}\n\nPartName.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  nutrition: PropTypes.shape({\n    lipids: PropTypes.exact({\n      value: PropTypes.number,\n      text: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n    })\n  }).isRequired,\n  cooking: PropTypes.shape({\n    text: PropTypes.string,\n    grilled: PropTypes.bool,\n    roasted: PropTypes.bool,\n    stewed: PropTypes.bool\n  }).isRequired,\n};\n \nexport default PartName;\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport Map from './map'\nimport PartName from \"./partName\"\n\nimport { screen } from \"../constants\"\n\nconst Container = styled.div({\n  height: \"100%\",\n})\n\nconst MapSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  textAlign: \"center\",\n  padding: \"32px 32px 0px\",\n  overflowX: \"scroll\",\n  overflowY: \"hidden\",\n  direction: \"rtl\",\n  [screen.mediaQuery.l]: {\n    height: \"60%\",\n  }\n})\n\nconst PartNameSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  [screen.mediaQuery.l]: {\n    height: \"40%\",\n  }\n})\n\nclass MapContainer extends Component {\n  state = { \n    hovered: null,\n    selected: null,\n   }\n\n  updateHoveredPiece = id => {\n    this.setState({\n      hovered: id,\n    });\n  }\n\n  updateClickedPiece = id => {\n    this.setState({\n      selected: (this.state.selected === id ? null : id),\n    })\n  }\n\n  getFocusedPieceId() {\n    return this.state.selected || this.state.hovered;\n  }\n  \n  getPieceProps(id) {\n    if (id === null) {\n      return {};\n    }\n    let part = this.props.parts.find(part => (part.id === id))\n    return part;\n  }\n\n  render() {\n    return (\n      <Container>\n        <MapSubContainer>\n          <Map\n            outline={this.props.outline}\n            parts={this.props.parts}\n            selected={this.getFocusedPieceId()}\n            hovered={id => this.updateHoveredPiece(id)}\n            clicked={id => this.updateClickedPiece(id)}\n          />\n        </MapSubContainer>\n        <PartNameSubContainer>\n          <PartName\n            {...this.getPieceProps(this.getFocusedPieceId())}\n          />\n        </PartNameSubContainer>\n      </Container> \n    );\n  }\n}\n \nexport default MapContainer;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/layouts/seo\"\n\nimport MapContainer from \"../components/maps/mapContainer\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Boeuf\" />\n    <MapContainer\n      parts={data.mapsJson.parts}\n      outline={data.mapsJson.d}\n    />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\nquery MyQuery {\n  mapsJson(country: {eq: \"fr\"}, map: {eq: \"beef\"}) {\n    d\n    parts {\n      d\n      description\n      id\n      name\n      transform\n      nutrition {\n        lipids {\n          text\n          value\n        }\n      }\n      cooking {\n        text\n        grilled\n        roasted\n        stewed\n      }\n      attributes {\n        gelatin\n        marble\n        lean\n      }\n    }\n  }\n}\n`   ","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}