{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/maps/piece.js","webpack:///./src/components/maps/unediblePiece.js","webpack:///./src/components/maps/map.js","webpack:///./src/components/generic/hoverAdaptedSpan.js","webpack:///./src/components/generic/tooltip.js","webpack:///./src/components/maps/partName.js","webpack:///./src/components/maps/mapContainer.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js"],"names":["toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Path","Piece","props","d","transform","strokeLinecap","strokeLinejoin","strokeOpacity","fillOpacity","selected","onMouseEnter","onHover","onMouseLeave","onClick","fill","colors","map","unedibleFill","Svg","screen","mediaQuery","l","maxWidth","Map","updateHovered","id","isHovered","hovered","render","viewBox","stroke","strokeWidth","height","parts","p","description","key","h","clicked","Component","NonHoverableDeviceSpan","HoverableDeviceSpan","HoverAdaptedSpan","nonHoverable","hoverable","Container","TooltipSpan","opacity","width","backgroundColor","color","textAlign","padding","borderRadius","position","zIndex","top","left","marginLeft","transition","content","bottom","borderWidth","borderStyle","borderColor","margin","visible","Tooltip","state","handleClick","setState","children","text","t","FixedContainer","HelpMessage","boxSizing","fontSize","background","pieceName","MovingContainer","show","Title","display","Description","Nutrition","PartName","label","nutrition","lipids","getDerivedStateFromProps","name","console","log","role","aria-label","MapSubContainer","overflowX","overflowY","direction","PartNameSubContainer","MapContainer","updateHoveredPiece","updateClickedPiece","getFocusedPieceId","getPieceProps","find","part","IndexPage","data","title","mapsJson","query","$export","P"],"mappings":"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","file":"component---src-pages-index-js-da5bcb1f531b22c148f2.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Path = styled.path({\n  cursor: \"pointer\",\n  transition: \"all 0.2s ease-out\",\n})\n\nconst Piece = (props) => {\n  return ( \n    <Path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fillOpacity={props.selected ? 1 : 0}\n        onMouseEnter={() => {props.onHover(true)}}\n        onMouseLeave={() => {props.onHover(false)}}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React from 'react';\n\nimport { colors } from \"../constants\";\n\nconst Piece = (props) => {\n  return ( \n    <path\n        d={props.d}\n        transform={props.transform}\n        strokeLinecap=\"butt\"\n        strokeLinejoin=\"miter\"\n        strokeOpacity={1}\n        fill={colors.map.unedibleFill}\n        onClick={() => {props.onClick()}}\n    />\n   );\n}\n \nexport default Piece;\n ","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport { colors, screen } from \"../constants\";\n\nimport Piece from \"./piece\"\nimport UnediblePiece from \"./unediblePiece\"\n\nconst Svg = styled.svg({\n  [screen.mediaQuery.l]: {\n    maxWidth: \"100%\",\n  }\n})\n\nclass Map extends Component {\n  updateHovered = (id, isHovered) => {\n    this.props.hovered(isHovered ? id : null);\n  }\n\n  render() { \n    return (\n      <Svg\n        viewBox=\"0 0 159.69495 99.785713\"\n        fill={colors.map.fill}\n        stroke={colors.map.stroke}\n        strokeWidth={0.7}\n        height=\"100%\"\n        >\n          {\n            this.props.parts.map(p => ( p.description ?\n            <Piece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              selected={this.props.selected === p.id}\n              onHover={h => (this.updateHovered(p.id, h))}\n              onClick={() => (this.props.clicked(p.id))}\n            /> :\n            <UnediblePiece\n              key={p.id}\n              d={p.d}\n              transform={p.transform}\n              onClick={() => (this.props.clicked(null))}\n            />\n            ))\n          }\n      </Svg>\n    );\n  }\n}\n \nexport default Map;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst NonHoverableDeviceSpan = styled.span({\n  \"@media (hover: hover)\": {\n    display: \"none\",\n  }\n})\n\nconst HoverableDeviceSpan = styled.span({\n  \"@media (hover: none)\": {\n    display: \"none\",\n  }\n})\n\nfunction HoverAdaptedSpan(props) {\n  return (\n    <>\n      <NonHoverableDeviceSpan>{props.nonHoverable}</NonHoverableDeviceSpan>\n      <HoverableDeviceSpan>{props.hoverable}</HoverableDeviceSpan>\n    </>\n  );\n}\n\nexport default HoverAdaptedSpan;\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div({\n  position: \"relative\",\n  display: \"inline-block\",\n  cursor: \"pointer\",\n})\n\nconst TooltipSpan = styled.span({\n  opacity: 0,\n  width: 200,\n  backgroundColor: \"#393332\",\n  color: \"white\",\n  textAlign: \"center\",\n  padding: \"0 8px\",\n  borderRadius: 4,\n  position: \"absolute\",\n  zIndex: 1,\n  top: \"100%\",\n  left: \"50%\",\n  marginLeft: -100,\n  transition: \"opacity .4s\",\n  \n  [`${Container}:hover &`]: {\n    opacity: 1,\n  },\n\n  '&::after': {\n    content: '\" \"',\n    position: \"absolute\",\n    bottom: \"100%\",\n    left: \"50%\",\n    marginLeft: -8,\n    borderWidth: 8,\n    borderStyle: \"solid\",\n    borderColor: \"transparent transparent black transparent\",\n  },\n\n  '&>div': {\n    margin: \"8px 0\",\n  }\n}, props => ({\n  '@media (hover: none)': {\n    opacity: props.visible ? 1 : 0,\n  }\n}))\n\nclass Tooltip extends Component {\n  state = {\n    visible: false,\n  }\n\n  handleClick = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  }\n\n  render() {\n    return (\n      <Container\n        onClick={this.handleClick}\n      >\n        {this.props.children}\n        <TooltipSpan visible={this.state.visible}>\n          {\n            typeof this.props.text === \"string\"\n            ? <div>{this.props.text}</div>\n            : this.props.text.map(t => (\n              <div>{t}</div>\n            ))\n          }\n        </TooltipSpan>\n      </Container>\n    );\n  }\n}\n\nexport default Tooltip;","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport HoverAdpatedSpan from \"../generic/hoverAdaptedSpan\";\nimport Tooltip from \"../generic/tooltip\";\n\nimport { colors, screen } from \"../constants\";\n\nconst FixedContainer = styled.div({\n  textAlign: \"center\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  overflow: \"hidden\",\n  position: \"relative\",\n})\n\nconst HelpMessage = styled.p({\n  boxSizing: \"border-box\",\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  width: \"100%\",\n  fontSize: 24,\n  padding: 16,\n  margin: 0,\n  background: colors.pieceName.background,\n  color: colors.pieceName.text,\n  [screen.mediaQuery.l]: {\n    left: \"50%\",\n    width: 500,\n    marginLeft: -250,\n    bottom: 32,\n    borderRadius: 500,\n  }\n})\n\nconst MovingContainer = styled.div({\n  transition: \"0.5s\",\n  margin: \"0 auto\",\n  maxWidth: screen.l,\n}, props => ({\n  transform: props.show ? \"translateY(0%)\" : \"translateY(100%)\"\n}))\n\nconst Title = styled.h2({\n  display: \"inline-block\",\n  boxSizing: \"border-box\",\n  margin: 0,\n  width: \"100%\",\n  padding: \"32px 32px 16px\",\n  background: colors.pieceName.background,\n  borderRadius: \"8px 8px 0 0\",\n  [screen.mediaQuery.l]: {\n    fontSize: 36,\n    width: \"unset\",\n    margin: \"0 32px\",\n    padding: \"32px 64px 16px\",\n  }\n})\n\nconst Description = styled.div({\n  padding: \"32px 32px 100%\",\n  margin: 0,\n  textAlign: \"center\",\n  background: colors.pieceName.background,\n  [screen.mediaQuery.l]: {\n    borderRadius: \"8px 8px 0 0\",\n  }\n})\n\nconst Nutrition = styled.p({\n  fontSize: \"1.4rem\",\n  \n  '& > :not([role=img])': {\n    borderBottom: \"2px dotted #444\",\n  }\n})\n\nclass PartName extends Component {\n  state = { \n    label: \"\",\n    description: \"\",\n    nutrition: {\n      lipids: {\n        value: null,\n        text: [],\n      },\n    },\n   }\n\n  // Needed to keep the previous name on animation\n  static getDerivedStateFromProps(props, state) {\n    if (!props.name || props.name === state.label) {\n      return null;\n    }\n\n    return {\n      label: props.name,\n      description: props.description,\n      nutrition: props.nutrition,\n    };\n  }\n\n  render() { \n    console.log(this.state);\n    return (\n      <FixedContainer>\n        <HelpMessage>\n          <HoverAdpatedSpan\n            hoverable={\"Survolez la carte pour afficher les détails\"}\n            nonHoverable={\"Cliquez la carte pour afficher les détails\"}\n          />\n        </HelpMessage>\n        <MovingContainer show={this.props.name}>\n          <Title>{ this.state.label }</Title>\n          <Description>\n            <Tooltip\n              text={\n                this.state.nutrition.lipids.text.length === 0\n                ? \"Pas de doneées\"\n                : this.state.nutrition.lipids.text\n              }\n            >\n              <Nutrition><span role=\"img\" aria-label=\"Frites\">🍟</span> <span>{this.state.nutrition.lipids.value || \"-\"} %</span></Nutrition>\n            </Tooltip>\n            <p>{this.state.description}</p>\n          </Description>\n        </MovingContainer>\n      </FixedContainer>\n    );\n  }\n}\n \nexport default PartName;\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\n\nimport Map from './map'\nimport PartName from \"./partName\"\n\nimport { screen } from \"../constants\"\n\nconst Container = styled.div({\n  height: \"100%\",\n})\n\nconst MapSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  textAlign: \"center\",\n  padding: \"32px 32px 0px\",\n  overflowX: \"scroll\",\n  overflowY: \"hidden\",\n  direction: \"rtl\",\n  [screen.mediaQuery.l]: {\n    height: \"66.6%\",\n  }\n})\n\nconst PartNameSubContainer = styled.div({\n  height: \"50%\",\n  boxSizing: \"border-box\",\n  [screen.mediaQuery.l]: {\n    height: \"33.3%\",\n  }\n})\n\nclass MapContainer extends Component {\n  state = { \n    hovered: null,\n    selected: null,\n   }\n\n  updateHoveredPiece = id => {\n    this.setState({\n      hovered: id,\n    });\n  }\n\n  updateClickedPiece = id => {\n    this.setState({\n      selected: (this.state.selected === id ? null : id),\n    })\n  }\n\n  getFocusedPieceId() {\n    return this.state.selected || this.state.hovered;\n  }\n  \n  getPieceProps(id) {\n    if (id === null) {\n      return {};\n    }\n    let part = this.props.parts.find(part => (part.id === id))\n    return part;\n  }\n\n  render() {\n    return (\n      <Container>\n        <MapSubContainer>\n          <Map\n            parts={this.props.parts}\n            selected={this.getFocusedPieceId()}\n            hovered={id => this.updateHoveredPiece(id)}\n            clicked={id => this.updateClickedPiece(id)}\n          />\n        </MapSubContainer>\n        <PartNameSubContainer>\n          <PartName\n            {...this.getPieceProps(this.getFocusedPieceId())}\n          />\n        </PartNameSubContainer>\n      </Container> \n    );\n  }\n}\n \nexport default MapContainer;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layouts/layout\"\nimport SEO from \"../components/layouts/seo\"\n\nimport MapContainer from \"../components/maps/mapContainer\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <MapContainer\n      parts={data.mapsJson.parts}\n    />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\nquery MyQuery {\n  mapsJson(country: {eq: \"fr\"}, map: {eq: \"beef\"}) {\n    parts {\n      d\n      description\n      id\n      name\n      transform\n      nutrition {\n        lipids {\n          text\n          value\n        }\n      }\n    }\n  }\n}\n`   ","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n"],"sourceRoot":""}